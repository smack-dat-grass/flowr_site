"""
Django settings for flowr_site project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
# from health_check.plugins import plugin_dir

#added for database pooling
DATABASE_POOL = {}
###
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y@7=92n+c1fej720%0aabbmgm@b$bjxonufy9t*=f+em-pymhl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG =True
# DEBUG = os.getenv('DEBUG', False) == 'True'
# print(DEBUG)
TEMPLATE_DEBUG=False
ALLOWED_HOSTS = ['localhost','127.0.0.1']

ENCRYPTION_KEY=b"aWIh9sojhlQKDsimtE8QUkPLyVWYVx-1122KaDDj_rY="
# Application definition
CORS_ORIGIN_ALLOW_ALL=True
INSTALLED_APPS = [
    "django_rq",
    'corsheaders',
    'flowr_site',
    'alerts',
    'reports',
    # 'config.apps.ConfigConfig',
    'config',
    'tasks',
    'search',
    'tools',
    'products',
    'locations',
    'dispensaries',
    'scraping',
    'taggit',
    'strains',
    'health_check',
    'health_check.db',  # stock Django health checkers
    'health_check.cache',
    'health_check.storage',
    'health_check.contrib.migrations',
    # 'health_check.contrib.celery',  # requires celery
    # 'health_check.contrib.celery_ping',  # requires celery
    'health_check.contrib.psutil',  # disk and memory utilization; requires psutil
    'health_check.contrib.redis',  # requires Redis broker
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'flowr_site.urls'
TEMPLATE_PATH = os.path.join(BASE_DIR, 'templates')
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_PATH],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'flowr_site.context_processors.load_base_variables',
            ],
        },
    },
]

WSGI_APPLICATION = 'flowr_site.wsgi.application'


# Database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'dope_deals.sqlite3',
    }
}
print(BASE_DIR / 'dope_deals.sqlite3')

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Eastern'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
# TEMPLATE_DIRS = [os.path.join(f"{BASE_DIR}/reports/", 'templates')]
RQ_QUEUES = {
    "default": {"HOST": "localhost", "PORT": 6379, "DB": 0, "DEFAULT_TIMEOUT": 21000,},
}

# from .task_loader import run
# run()
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
STATICFILES_DIRS = [
    BASE_DIR / "static_files",
    # '/var/www/static/',
]
STATIC_ROOT=f"{BASE_DIR}/static"
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240

#email config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_USE_TLS = False
EMAIL_PORT = 2500
# EMAIL_HOST_USER = #sender's email-id
# EMAIL_HOST_PASSWORD = #password associated with above email-id
# from config.backends import UsersLoggedInTodayHealthCheckBackend

# plugin_dir.register(UsersLoggedInTodayHealthCheckBackend)
DATA_UPLOAD_MAX_MEMORY_SIZE = 5242880*5